#! /bin/bash
# Copyright (c) 2023-2024 Alexander Chernov <cher@ejudge.ru>

LANG_CONFIG_DIR="@lang_config_dir@"

common_config() {
  echo 'long_name="Typescript"'
  echo 'src_sfx=".ts"'
  echo 'exe_sfx=".ts"'
  echo 'arch="linux-shared"'
  echo 'insecure=1'
}

failure() {
  rm -f conftest*
  echo 'version='
  echo 'arg="'"${arg}"'"'
  common_config
  echo 'NODEPATH=/bin/false'
  [ "${verbose}" = 1 ] && echo "no" >&2
  exit 1
}

try_compiler() {
  compiler="$1"
  "${compiler}" --version >/dev/null 2>&1 || return 1
  version=`"${compiler}" --version 2>&1 | gawk '{ v=$(NF); gsub("^v", "", v); print v; exit(0); }'` || return 1
  [ "${version}" != "" ] || return 1
  NODEPATH=`which "${compiler}"` || return 1
  [ "${NODEPATH}" != "" ] || return 1
  echo "#! ${NODEPATH}" > conftest.ts
  echo "console.log('yes');" >> conftest.ts
  if ! chmod +x ./conftest.ts >/dev/null 2>&1
  then
    rm -f ./conftest.ts
    return 1
  fi
  if ! ./conftest.ts >/dev/null 2>&1
  then
    rm -f ./conftest.ts
    return 1
  fi
}

unset LANG
unset LC_ALL
unset LC_MESSAGES
unset LANGUAGE

if [ x"$1" = x-v ]
then
  verbose=1
  shift
fi

# recheck the language
if [ x"$1" = x-r ]
then
  arg="$2"
  [ x"$2" != x ] && node="$2"

  [ "${verbose}" = 1 ] && echo -n "checking whether TypeScript is available..." >&2
  if [ "${node}" != "" ]
  then
    try_compiler "${node}" || failure
    NODEPATH=`which "${node}"`
  else
    if try_compiler tsx
    then
      NODEPATH=`which tsx`
    else
      if try_compiler ts-node
      then
        NODEPATH=`which ts-node`
      else
        failure
      fi
    fi
  fi

  rm -f ./conftest*
  echo 'version="'"${version}"'"'
  echo 'arg="'"${arg}"'"'
  common_config
  echo 'NODEPATH="'"${NODEPATH}"'"'
  [ "${verbose}" = 1 ] && echo "yes, ${NODEPATH}, ${version}" >&2
  exit 0
fi

if [ x"$1" = x-l ]
then
  echo "TypeScript interpreter [https://nodejs.org]"
  exit 0
fi

[ "${EJUDGE_LANG_CONFIG}" = "" ] && EJUDGE_LANG_CONFIG="${LANG_CONFIG_DIR}/tsnode.cfg"

if [ -f "${EJUDGE_LANG_CONFIG}" ]
then
  . "${EJUDGE_LANG_CONFIG}"
else
  NODEPATH=`which ts-node`
fi

if [ x"${NODEPATH}" = x -o x"${NODEPATH}" = x/bin/false ]
then
  echo "This language is not supported." >&2
  exit 1
fi

if [ x"$1" = x-p ]
then
    echo "${NODEPATH}"
    exit 0
fi

"${NODEPATH}" --version 2>/dev/null >/dev/null || exit 1
    
[ x"$1" = x-f ] && echo -n "TypeScript "

"${NODEPATH}" --version 2>&1 | sed 's/v//g'
